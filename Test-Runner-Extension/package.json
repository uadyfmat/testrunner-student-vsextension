{
  "name": "test-runner-extension-0",
  "displayName": "Test-Runner-extension-0",
  "description": "Extencion de prueba para el Test-Runner",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.88.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./src/extension.js",
  "contributes": {
    "commands": [
      {
      "command": "test-runner-extension-0.helloWorld",
      "title": "Hello World"
      },
      {
        "command": "test-runner-extension-0.installTestRunner",
        "title": "Install Test-Runner"
      },
      {
        "command": "test-runner-extension-0.runTest",
        "title": "Run Test-Runner"
      }
  ],
    "menus": {
      "explorer/context": [
        {
          "command": "test-runner-extension-0.installTestRunner"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "test-runner",
          "title": "Test-Runner",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "views":{
      "test-runner":[
        {
          "id": "package-install-test-runner",
          "name": "Install Test-Runner"
        },
        {
          "id": "package-run-test-runner",
          "name": "Run Test-Runner"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "package-install-test-runner",
        "contents": "Click to choose path \n[Open Folder](command:vscode.openFolder)\n Click to install the Test-Runner\n[Install](command:test-runner-extension-0.installTestRunner)\n"
      },
      {
        "view": "package-run-test-runner",
        "contents": "Click to run the Test-Runner\n[Run](command:test-runner-extension-0.runTest)\n"
      }
    ], "walkthroughs": [
			{
				"id": "sample",
				"title": "Sample",
				"description": "A sample walkthrough",
				"steps": [
					{
						"id": "runcommand",
						"title": "Run Command",
						"description": "This step will run a command and check off once it has been run.\n[Run Command](command:getting-started-sample.runCommand)",
						"media": {
							"image": "media/image.png",
							"altText": "Empty image"
						},
						"completionEvents": [
							"onCommand:getting-started-sample.runCommand"
						]
					},
					{
						"id": "changesetting",
						"title": "Change Setting",
						"description": "This step will change a setting and check off when the setting has changed\n[Change Setting](command:getting-started-sample.changeSetting)",
						"media": {
              "markdown": "src/walkdocs/hello.md",
							"altText": "Empty image"
						},
						"completionEvents": [
							"onSettingChanged:getting-started-sample.sampleSetting"
						]
					},
					{
						"id": "setcontext",
						"title": "Set Context",
						"description": "This step will set a context key, and check off when that context has been set\n[Set Context](command:getting-started-sample.setContext)",
						"media": {
							"image": "media/image.png",
							"altText": "Empty image"
						},
						"completionEvents": [
							"onContext:gettingStartedContextKey"
						]
					},
					{
						"id": "install python extension",
						"title": "Install Python Extension",
						"description": "Click here to install the Python Extension. This step will complete once it has been installed.\n[Here](command:workbench.extensions.installExtension?%22ms-python.python%22)",
						"media": {
							"image": "media/image.png",
							"altText": "Empty image"
						},
						"completionEvents": [
							"extensionInstalled:ms-python.python"
						]
					},
					{
						"id": "open terminal view",
						"title": "Open Terminal",
						"description": "Click [here](command:workbench.action.terminal.toggleTerminal) to open terminal. This step will complete once the terminal has been opened.",
						"media": {
							"image": "media/image.png",
							"altText": "Empty image"
						},
						"completionEvents": [
							"onView:terminal"
						]
					},
					{
						"id": "usesvg",
						"title": "Use SVG's",
						"description": "Try out using SVG's in your content, they can react to the theme (try: ``var(--vscode-foreground)``) and even host command links (try: ``xlink:href=\"command:``)",
						"media": {
							"svg": "media/image.svg",
							"altText": "Empty svg image"
						}
					},
					{
						"id": "mac",
						"title": "UI Platform: Mac",
						"description": "This step will only show on a Mac.",
						"when": "isMac",
						"media": {
							"markdown": "media/mac.md"
						}
					},
					{
						"id": "windows",
						"title": "UI Platform: Windows",
						"description": "This step will only show on Windows",
						"when": "isWindows",
						"media": {
							"markdown": "media/windows.md"
						}
					},
					{
						"id": "linux",
						"title": "UI Platform: Linux",
						"description": "This step will only show on Linux",
						"when": "isLinux",
						"media": {
							"markdown": "media/linux.md"
						}
					},
					{
						"id": "macRemote",
						"title": "Workspace Platform: Mac",
						"description": "This step will only show on Mac remotes.",
						"when": "workspacePlatform == 'mac'",
						"media": {
							"markdown": "media/mac.md"
						}
					},
					{
						"id": "windowsRemote",
						"title": "Workspace Platform: Windows",
						"description": "This step will only show on Windows remotes",
						"when": "workspacePlatform == 'windows'",
						"media": {
							"markdown": "media/windows.md"
						}
					},
					{
						"id": "linuxRemote",
						"title": "Workspace Platform: Linux",
						"description": "This step will only show on Linux remotes",
						"when": "workspacePlatform == 'linux'",
						"media": {
							"markdown": "media/linux.md"
						}
					},
					{
						"id": "webRemote",
						"title": "Workspace Platform: Web",
						"description": "This step will only show on webworker remotes",
						"when": "workspacePlatform == 'webworker'",
						"media": {
							"markdown": "media/linux.md"
						}
					},
					{
						"id": "showSources",
						"title": "View Sources",
						"description": "Open a folder containg the sources of this extension.\n[View Sources](command:getting-started-sample.viewSources)",
						"media": {
							"image": "media/image.png",
							"altText": "Empty image"
						}
					}
				]
			}
		]
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.88.0",
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "eslint": "^8.56.0",
    "typescript": "^5.3.3",
    "@vscode/test-cli": "^0.0.6",
    "@vscode/test-electron": "^2.3.9"
  }
}
